<?xml version="1.0" encoding="utf-8"?> 
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<ItemDefinitionGroup>
		<!-- Compiler common settings -->
		<ClCompile >
			<DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
			<WarningLevel>Level3</WarningLevel>
			<WholeProgramOptimization>false</WholeProgramOptimization>
			<!-- The .NET 4.0 reference assemblies are always kept in the program files(x86) directory -->
			<AdditionalUsingDirectories>$(MSBuildProgramFiles32)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0;%(AdditionalUsingDirectories)</AdditionalUsingDirectories>
			<PreprocessorDefinitions>_ADESK_3DSMAX_WINDOWS_; WINVER=0x0502;_WIN32_WINNT=0x0502;_WIN32_WINDOWS=0x0502;_WIN32_IE=0x0800;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_SCL_SECURE_NO_DEPRECATE;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT =1;_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES=1;ISOLATION_AWARE_ENABLED=1;MODULE_NAME=$(TargetFileName);%(PreprocessorDefinitions)</PreprocessorDefinitions>
			<AdditionalOptions>/GR /we4002 /we4706 /we4390 /we4557 /we4546 /we4545 /we4295 /we4310 /we4130 /we4611 /we4213 /we4121 /we4715 /we4701 /w34265 /wd4244 /wd4018 /wd4819 %(AdditionalOptions)</AdditionalOptions>
			<ExceptionHandling>Async</ExceptionHandling>
			<FloatingPointModel>Fast</FloatingPointModel>
			<RuntimeTypeInfo>true</RuntimeTypeInfo>
			<UseFullPaths>true</UseFullPaths>
			<PrecompiledHeader>NotUsing</PrecompiledHeader>
			<PrecompiledHeaderOutputFile>$(IntDir)$(TargetName).pch</PrecompiledHeaderOutputFile>
			<EnableEnhancedInstructionSet Condition="'$(CLRSupport)' == 'true'">NotSet</EnableEnhancedInstructionSet>
			<MultiProcessorCompilation>true</MultiProcessorCompilation>
			<!-- MAXBUILD_FAIL_ON_COMPILER_WARNINGS is an env var set by maxrake -->
			<TreatWarningAsError>$(MAXBUILD_FAIL_ON_COMPILER_WARNINGS)</TreatWarningAsError>
		</ClCompile>

		<!-- Linker Common Settings -->
		<Link>
			<!-- So that Hybrid builds can be mixed and matched with release builds -->
			<AdditionalLibraryDirectories Condition="'$(Configuration)'=='$(ConfigHybrid)'">$(MaxSdkDir)lib\$(Platform)\$(ConfigRelease)\;$(MaxDevelDir)\3dswin\lib\$(MaxPlatform)\$(ConfigRelease)\</AdditionalLibraryDirectories>
			<LinkIncremental>false</LinkIncremental>
			<GenerateDebugInformation>true</GenerateDebugInformation>
			<SubSystem>Windows</SubSystem>
			<RandomizedBaseAddress>false</RandomizedBaseAddress>
			<ProgramDatabaseFile>$(TargetPath).pdb</ProgramDatabaseFile>
			<StripPrivateSymbols>$(MaxPdbDir)\$(TargetFileName).pdb</StripPrivateSymbols>
			<ImportLibrary>$(IntDir)\$(TargetName).lib</ImportLibrary>
			<OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
			<!-- We only care about rebasing release builds only. -->
			<!-- For now we are turning off looking up base address's and will just have a fixed address. This is because these build warnings
				 are just noise, and it will be too difficult to continually rebase every other day. If this slows down the startup times for 
				 max we will rebase all of max again and turn this on. 
			<BaseAddress Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(MaxSdkDir)\baseaddr.txt,$(TargetName)</BaseAddress>
			<BaseAddress Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(MaxSdkDir)\baseaddr64.txt,$(TargetName)</BaseAddress> -->
			<BaseAddress Condition="'$(Configuration)'=='Release'">0x04000000</BaseAddress>
		</Link>
		
		<!-- Librarian Common Settings. This is for static libraries -->
		<Lib>
			<OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
			<!-- So that Hybrid builds can be mixed and matched with release builds -->
			<AdditionalLibraryDirectories Condition="'$(Configuration)'=='$(ConfigHybrid)'">$(MaxSdkDir)lib\$(Platform)\$(ConfigRelease)\;$(MaxDevelDir)\3dswin\lib\$(MaxPlatform)\$(ConfigRelease)\</AdditionalLibraryDirectories>
		</Lib>

		<!-- Extract MUI Resource DLL -->
		<!-- The first argument to RunMUIRCT.exe must end with a backslash. -->
		<PostBuildEvent>
			<!-- The paths are normalizd by the calls to Path::GetFullPath. This makes the paths have consistent path seperator characters, removes back directory elipses (..), and 
				makes the output alot easier to read and debug. Note, the build command this can NOT be split up into more than one line: That will break the build. -->
			<Command Condition="'$(TargetExt)' != '.lib'">"$([System.IO.Path]::GetFullPath('$(MaxSdkDir)/tools/RunMUIRCT.exe'))" "$([System.IO.Path]::GetFullPath('$(TargetDir)'))\" $(TargetFileName)</Command>
		</PostBuildEvent>
		
		<ResourceCompile>
			<PreprocessorDefinitions>_MSC_VER; %(PreprocessorDefinitions)</PreprocessorDefinitions>
			<Culture>0x0409</Culture>
		</ResourceCompile>
		
	</ItemDefinitionGroup>
	
</Project>
