#include "_String.h"
#include "utmemory.h"

//////////////////////////////////////////////////////////////////////////
String::String(): mText(0)

{
   ;//
}

//////////////////////////////////////////////////////////////////////////
String::String(const char* string): mText(0)
{
   ;//	
}

//////////////////////////////////////////////////////////////////////////
String::String(const String& str): mText(0)
{
   ;//
}

//////////////////////////////////////////////////////////////////////////
String::~String()
{
   Reset();
}

//////////////////////////////////////////////////////////////////////////
void String::Reset()
{
	if(!mText){
		return;
	}
	DELETEARRAY(mText);
}

//////////////////////////////////////////////////////////////////////////
bool String::Set(const char* string)
{
   Reset();

   if(string)
   {
	   udword length = (udword)strlen(string);
	   if(length)
	   {
           mText = new char[length+1];
		   CHECKALLOC(mText);
		   CopyMemory(mText,string,length);
		   mText[length] = 0;
	   }
   }

   return true;
}

//////////////////////////////////////////////////////////////////////////
bool String::Set( const String& str)
{
  return Set(str.Get());
}

//////////////////////////////////////////////////////////////////////////
udword String::Length() const
{
	if(!mText) return 0;
	return (udword)strlen((const char*)mText);
}

//////////////////////////////////////////////////////////////////////////
sdword String::Compare(const String& str) const
{
	//if(!str.mText) { return ; }
	return strcmp(mText,str.mText);
}

//////////////////////////////////////////////////////////////////////////
sdword String::Compare(const char* str) const
{
	return strcmp(mText,str);
}

//////////////////////////////////////////////////////////////////////////
String& String::ToUpper()
{
    if(mText)
	{
        for(udword i=0;i<Length();i++){
			mText[i] = (char)toupper(mText[i]);
		}
	}
	return *this;
}

//////////////////////////////////////////////////////////////////////////
String& String::ToLower()
{
	if(mText)
	{
		for(udword i=0;i<Length();i++){
			mText[i] = (char)tolower(mText[i]);
		}
	}
	return *this;
}